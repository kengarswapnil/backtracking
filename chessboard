class Main {
    
    public static boolean isSafe(char queen[][],int row ,int col)
    {
        //row
         for(int i=row-1;i>=0;i--)
         {
             if(queen[i][col]=='Q')
             {
                 return false;
             }
         }
         
         //diagonal
         for(int i=row-1,j=col-1;i>=0 && j>=0;i--,j--){
             if(queen[i][j]=='Q')
             {
                 return false;
             }
         }
         
         //
         for(int i=row-1,j=col+1;i>=0 && j<queen.length;i--,j++){
             if(queen[i][j]=='Q')
             {
                 return false;
             }
         }
         
         return true;
         
    }
    
    
    public static void Queen(char queen[][], int row)
    {
        if(row == queen.length)
        {
            count++;
            System.out.println("Solution #" + count + ":");
            printarr(queen);
            return ;
        }
        
        for(int i=0;i<queen.length;i++)
        {
               if(isSafe(queen ,row,i)){
                 queen[row][i] = 'Q';
                 Queen(queen,row + 1);
                 queen[row][i] = 'X';
               }
        }
    }
    
    public static void printarr(char queen[][])
    {
        for(int i=0;i<queen.length;i++)
        {
            for(int j=0;j<queen.length;j++){
                 System.out.print(queen[i][j]+ " ");
            }
          
             System.out.println();
        }
          System.out.println();
    }
    
    static int count = 0;
    
    public static void main(String[] args) {
        int n = 4;
        count=0;
        char queen [][] = new char[n][n];
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                queen[i][j]='X';
            }
        }
        Queen(queen,0);
        System.out.println("Total Solutions: " + count);
    }
}
